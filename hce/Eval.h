#pragma once
#include "../Typedefs.h"
namespace hce {
    constexpr int PHASE_PIECE_VALUES[5] = {4,2,1,1,0};
    constexpr const static eval_t MATE_VALUE = 1048576;
    constexpr uint64_t bishop_pair = 158913790050ULL;
    constexpr uint64_t passed_pawn_on_ranks[] = {0ULL, 281440617037795ULL, 281410552266740ULL, 281414847168538ULL, 81604378687ULL, 47244640408ULL, 566935683324ULL, 0ULL};
    constexpr uint64_t passed_pawn_on_file[] = {85899345982ULL, 81604378685ULL, 281462091808805ULL, 17179869200ULL, 281419142135829ULL, 8589934627ULL, 12884901955ULL, 38654705725ULL};
    constexpr uint64_t isolated_pawn = 281363307626476ULL;
    constexpr uint64_t king_zone_attacks[] = {107374182420ULL, 171798757365ULL, 133144051704ULL, 94489346037ULL, 94489346029ULL};
    constexpr uint64_t mobility[] = {281470681743378ULL, 25769803782ULL, 30064771082ULL, 3ULL, 281436322070514ULL};
    constexpr uint64_t king_psts[] = {227633332126ULL, 343597449173ULL, 281268818345964ULL, 280963875667964ULL, 281028300111881ULL, 280796371877918ULL, 280993940373511ULL, 360777318259ULL, 442381696959ULL, 133144051710ULL, 281444911939596ULL, 281131379327008ULL, 281161444098100ULL, 261993005108ULL, 47244640300ULL, 463856533434ULL, 253403135973ULL, 17179869202ULL, 281148559196202ULL, 280985350438976ULL, 281071249784911ULL, 281294588084304ULL, 281255933378623ULL, 532576010195ULL, 281105609588733ULL, 281264523313186ULL, 281079839719485ULL, 280779192008792ULL, 280783486976099ULL, 281212983705694ULL, 429496729639ULL, 281341832724498ULL, 4295032803ULL, 281264523313192ULL, 281139969261626ULL, 280809256779859ULL, 280856501420129ULL, 281470681743457ULL, 158913790018ULL, 281359012593669ULL, 281277408280572ULL, 281389077364762ULL, 281144264228906ULL, 281062659850296ULL, 281066954817620ULL, 463856468049ULL, 98784247896ULL, 201863462915ULL, 279172939729ULL, 206158495742ULL, 281367602528270ULL, 280968170569771ULL, 281045479981125ULL, 154618822740ULL, 296352743494ULL, 408021958652ULL, 244813201308ULL, 206158495713ULL, 281139969261575ULL, 280573033578530ULL, 280676112793643ULL, 281298883051559ULL, 281320357888032ULL, 605590454125ULL};
    constexpr uint64_t piece_type_psts[][64] = {
            {},
            {},
            {},
            {},
            {},
    };


    [[nodiscard]] inline packed_eval_t getPassedPawnOnSquareBonus(const int square) {
        return passed_pawn_on_ranks[square & 7] + passed_pawn_on_file[square >> 3];
    }


    [[nodiscard]] inline eval_t getEvalFromPacked (packed_eval_t packed, int phase) { // higher phase means closer to mg
        int mg = int(int16_t(packed >> 32 & 0xffff));
        int eg = int(int16_t(packed & 0xffff));
        return float(mg * phase + eg * (24 - phase)) / 24.0F;
    }
};

namespace pawn_eval {
    constexpr const static bitboard_t WHITE_PAWN_STOPPING_SQUARES[64] = {65278ULL, 64764ULL, 63736ULL, 61680ULL, 57568ULL, 49344ULL, 32896ULL, 0ULL, 16711422ULL, 16579836ULL, 16316664ULL, 15790320ULL, 14737632ULL, 12632256ULL, 8421504ULL, 0ULL, 4278124032ULL, 4244438016ULL, 4177065984ULL, 4042321920ULL, 3772833792ULL, 3233857536ULL, 2155905024ULL, 0ULL, 1095199752192ULL, 1086576132096ULL, 1069328891904ULL, 1034834411520ULL, 965845450752ULL, 827867529216ULL, 551911686144ULL, 0ULL, 280371136561152ULL, 278163489816576ULL, 273748196327424ULL, 264917609349120ULL, 247256435392512ULL, 211934087479296ULL, 141289391652864ULL, 0ULL, 71775010959654912ULL, 71209853393043456ULL, 70079538259820544ULL, 67818907993374720ULL, 63297647460483072ULL, 54255126394699776ULL, 36170084263133184ULL, 0ULL, 18374402805671657472ULL, 18229722468619124736ULL, 17940361794514059264ULL, 17361640446303928320ULL, 16204197749883666432ULL, 13889312357043142656ULL, 9259541571362095104ULL, 0ULL, 18374123529718202368ULL, 18229445391688925184ULL, 17940089115630370816ULL, 17361376563513262080ULL, 16203951459279044608ULL, 13889101250810609664ULL, 9259400833873739776ULL, 0ULL};
    constexpr const static bitboard_t BLACK_PAWN_STOPPING_SQUARES[64] = {};
    constexpr const static bitboard_t PAWN_NEIGHBOR_FILES[8] = {65280ULL,16711935ULL,4278255360ULL,1095233372160ULL,280379743272960ULL,71777214277877760ULL,18374966855136706560ULL,71776119061217280ULL};


    [[nodiscard]] inline bool isThisWhitePawnPassed (const int square, const bitboard_t blackPawns) {
        return (blackPawns & WHITE_PAWN_STOPPING_SQUARES[square]) == 0ULL;
    }
    [[nodiscard]] inline bool isThisBlackPawnPassed (const int square, const bitboard_t whitePawns) {
        return (whitePawns & BLACK_PAWN_STOPPING_SQUARES[square]) == 0ULL;
    }

    [[nodiscard]] inline bool isThisPawnIsolated (const int square, const bitboard_t friendlyPawns) {
        return (friendlyPawns & PAWN_NEIGHBOR_FILES[square >> 3]) == 0ULL;
    }

    [[nodiscard]] inline bool isThisPawnDoubled (const int square, const int friendlyPawns) {
        return (~(1ULL << square) & friendlyPawns & 255ULL << (square & 56)) != 0ULL;
    }
}